// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Experience {
  starts_at                    DateTime?
  ends_at                      DateTime?
  company                      String?
  company_linkedin_profile_url String?
  title                        String?
  description                  String?
  location                     String?
  logo                         String?
  currently_working            Boolean   @default(false)
}

type Education {
  starts_at      DateTime?
  ends_at        DateTime?
  field_of_study String?
  degree_name    String?
  school         String?
  logo           String?
}

type Project {
  title       String?
  description String?
  url         String?
}

type Certificate {
  name      String?
  authority String?
  url       String?
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  added_linkedin Boolean?  @default(false)
  Site           Site?
}

model Site {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  userId          String        @unique @db.ObjectId
  domain          String?
  username        String        @unique
  themeId         String        @db.ObjectId
  profile_picture String?
  linkedin_url    String?
  first_name      String?
  last_name       String?
  occupation      String?
  experiences     Experience[]
  education       Education[]
  courses         String[]
  skills          String[]
  projects        Project[]
  certificates    Certificate[]

  user User @relation(fields: [userId], references: [id])
}

model Theme {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  name String  @unique
  type String // paid or free
  path String
  img  String?
}
